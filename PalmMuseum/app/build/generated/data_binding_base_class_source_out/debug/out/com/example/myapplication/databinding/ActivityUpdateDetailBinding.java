// Generated by view binder compiler. Do not edit!
package com.example.myapplication.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.FrameLayout;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.Toolbar;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.myapplication.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityUpdateDetailBinding implements ViewBinding {
  @NonNull
  private final FrameLayout rootView;

  @NonNull
  public final TextView author;

  @NonNull
  public final TextView collect;

  @NonNull
  public final TextView comment;

  @NonNull
  public final EditText commentEditText;

  @NonNull
  public final TextView content;

  @NonNull
  public final Toolbar detailToobar;

  @NonNull
  public final ImageView imgCollect;

  @NonNull
  public final ImageView imgComment;

  @NonNull
  public final ImageView imgHeader;

  @NonNull
  public final ImageView imgLike;

  @NonNull
  public final ImageView imgUpdate;

  @NonNull
  public final TextView like;

  @NonNull
  public final LinearLayout llCommentEditText;

  @NonNull
  public final FrameLayout playerContainer;

  @NonNull
  public final RecyclerView recyclerView;

  @NonNull
  public final Button sendButton;

  @NonNull
  public final TextView title;

  private ActivityUpdateDetailBinding(@NonNull FrameLayout rootView, @NonNull TextView author,
      @NonNull TextView collect, @NonNull TextView comment, @NonNull EditText commentEditText,
      @NonNull TextView content, @NonNull Toolbar detailToobar, @NonNull ImageView imgCollect,
      @NonNull ImageView imgComment, @NonNull ImageView imgHeader, @NonNull ImageView imgLike,
      @NonNull ImageView imgUpdate, @NonNull TextView like, @NonNull LinearLayout llCommentEditText,
      @NonNull FrameLayout playerContainer, @NonNull RecyclerView recyclerView,
      @NonNull Button sendButton, @NonNull TextView title) {
    this.rootView = rootView;
    this.author = author;
    this.collect = collect;
    this.comment = comment;
    this.commentEditText = commentEditText;
    this.content = content;
    this.detailToobar = detailToobar;
    this.imgCollect = imgCollect;
    this.imgComment = imgComment;
    this.imgHeader = imgHeader;
    this.imgLike = imgLike;
    this.imgUpdate = imgUpdate;
    this.like = like;
    this.llCommentEditText = llCommentEditText;
    this.playerContainer = playerContainer;
    this.recyclerView = recyclerView;
    this.sendButton = sendButton;
    this.title = title;
  }

  @Override
  @NonNull
  public FrameLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityUpdateDetailBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityUpdateDetailBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_update_detail, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityUpdateDetailBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.author;
      TextView author = ViewBindings.findChildViewById(rootView, id);
      if (author == null) {
        break missingId;
      }

      id = R.id.collect;
      TextView collect = ViewBindings.findChildViewById(rootView, id);
      if (collect == null) {
        break missingId;
      }

      id = R.id.comment;
      TextView comment = ViewBindings.findChildViewById(rootView, id);
      if (comment == null) {
        break missingId;
      }

      id = R.id.commentEditText;
      EditText commentEditText = ViewBindings.findChildViewById(rootView, id);
      if (commentEditText == null) {
        break missingId;
      }

      id = R.id.content;
      TextView content = ViewBindings.findChildViewById(rootView, id);
      if (content == null) {
        break missingId;
      }

      id = R.id.detail_toobar;
      Toolbar detailToobar = ViewBindings.findChildViewById(rootView, id);
      if (detailToobar == null) {
        break missingId;
      }

      id = R.id.img_collect;
      ImageView imgCollect = ViewBindings.findChildViewById(rootView, id);
      if (imgCollect == null) {
        break missingId;
      }

      id = R.id.img_comment;
      ImageView imgComment = ViewBindings.findChildViewById(rootView, id);
      if (imgComment == null) {
        break missingId;
      }

      id = R.id.img_header;
      ImageView imgHeader = ViewBindings.findChildViewById(rootView, id);
      if (imgHeader == null) {
        break missingId;
      }

      id = R.id.img_like;
      ImageView imgLike = ViewBindings.findChildViewById(rootView, id);
      if (imgLike == null) {
        break missingId;
      }

      id = R.id.img_update;
      ImageView imgUpdate = ViewBindings.findChildViewById(rootView, id);
      if (imgUpdate == null) {
        break missingId;
      }

      id = R.id.like;
      TextView like = ViewBindings.findChildViewById(rootView, id);
      if (like == null) {
        break missingId;
      }

      id = R.id.ll_commentEditText;
      LinearLayout llCommentEditText = ViewBindings.findChildViewById(rootView, id);
      if (llCommentEditText == null) {
        break missingId;
      }

      id = R.id.player_container;
      FrameLayout playerContainer = ViewBindings.findChildViewById(rootView, id);
      if (playerContainer == null) {
        break missingId;
      }

      id = R.id.recyclerView;
      RecyclerView recyclerView = ViewBindings.findChildViewById(rootView, id);
      if (recyclerView == null) {
        break missingId;
      }

      id = R.id.sendButton;
      Button sendButton = ViewBindings.findChildViewById(rootView, id);
      if (sendButton == null) {
        break missingId;
      }

      id = R.id.title;
      TextView title = ViewBindings.findChildViewById(rootView, id);
      if (title == null) {
        break missingId;
      }

      return new ActivityUpdateDetailBinding((FrameLayout) rootView, author, collect, comment,
          commentEditText, content, detailToobar, imgCollect, imgComment, imgHeader, imgLike,
          imgUpdate, like, llCommentEditText, playerContainer, recyclerView, sendButton, title);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
