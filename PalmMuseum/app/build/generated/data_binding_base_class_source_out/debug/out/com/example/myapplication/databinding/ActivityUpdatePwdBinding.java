// Generated by view binder compiler. Do not edit!
package com.example.myapplication.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.LinearLayoutCompat;
import androidx.appcompat.widget.Toolbar;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.myapplication.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityUpdatePwdBinding implements ViewBinding {
  @NonNull
  private final LinearLayoutCompat rootView;

  @NonNull
  public final Toolbar backMine;

  @NonNull
  public final EditText confirmPwd;

  @NonNull
  public final LinearLayoutCompat main;

  @NonNull
  public final EditText newPwd;

  @NonNull
  public final View paddingView;

  @NonNull
  public final Button updatePwdBtn;

  private ActivityUpdatePwdBinding(@NonNull LinearLayoutCompat rootView, @NonNull Toolbar backMine,
      @NonNull EditText confirmPwd, @NonNull LinearLayoutCompat main, @NonNull EditText newPwd,
      @NonNull View paddingView, @NonNull Button updatePwdBtn) {
    this.rootView = rootView;
    this.backMine = backMine;
    this.confirmPwd = confirmPwd;
    this.main = main;
    this.newPwd = newPwd;
    this.paddingView = paddingView;
    this.updatePwdBtn = updatePwdBtn;
  }

  @Override
  @NonNull
  public LinearLayoutCompat getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityUpdatePwdBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityUpdatePwdBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_update_pwd, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityUpdatePwdBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.back_mine;
      Toolbar backMine = ViewBindings.findChildViewById(rootView, id);
      if (backMine == null) {
        break missingId;
      }

      id = R.id.confirm_pwd;
      EditText confirmPwd = ViewBindings.findChildViewById(rootView, id);
      if (confirmPwd == null) {
        break missingId;
      }

      LinearLayoutCompat main = (LinearLayoutCompat) rootView;

      id = R.id.new_pwd;
      EditText newPwd = ViewBindings.findChildViewById(rootView, id);
      if (newPwd == null) {
        break missingId;
      }

      id = R.id.padding_view;
      View paddingView = ViewBindings.findChildViewById(rootView, id);
      if (paddingView == null) {
        break missingId;
      }

      id = R.id.update_pwd_btn;
      Button updatePwdBtn = ViewBindings.findChildViewById(rootView, id);
      if (updatePwdBtn == null) {
        break missingId;
      }

      return new ActivityUpdatePwdBinding((LinearLayoutCompat) rootView, backMine, confirmPwd, main,
          newPwd, paddingView, updatePwdBtn);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
