// Generated by view binder compiler. Do not edit!
package com.example.myapplication.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.HorizontalScrollView;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.Toolbar;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.myapplication.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityAntiqueDetailBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ImageView addImage;

  @NonNull
  public final TextView author;

  @NonNull
  public final TextView category;

  @NonNull
  public final TextView collect;

  @NonNull
  public final TextView comment;

  @NonNull
  public final EditText commentEditText;

  @NonNull
  public final Toolbar detailToobar;

  @NonNull
  public final TextView era;

  @NonNull
  public final HorizontalScrollView horizontalScrollView;

  @NonNull
  public final LinearLayout imageContainer;

  @NonNull
  public final ImageView imageUrl;

  @NonNull
  public final ImageView imgCollect;

  @NonNull
  public final ImageView imgComment;

  @NonNull
  public final ImageView imgLike;

  @NonNull
  public final TextView like;

  @NonNull
  public final LinearLayout llCommentEditText;

  @NonNull
  public final TextView museum;

  @NonNull
  public final TextView name;

  @NonNull
  public final RecyclerView recyclerView;

  @NonNull
  public final Button sendButton;

  @NonNull
  public final TextView size;

  @NonNull
  public final TextView technique;

  private ActivityAntiqueDetailBinding(@NonNull ConstraintLayout rootView,
      @NonNull ImageView addImage, @NonNull TextView author, @NonNull TextView category,
      @NonNull TextView collect, @NonNull TextView comment, @NonNull EditText commentEditText,
      @NonNull Toolbar detailToobar, @NonNull TextView era,
      @NonNull HorizontalScrollView horizontalScrollView, @NonNull LinearLayout imageContainer,
      @NonNull ImageView imageUrl, @NonNull ImageView imgCollect, @NonNull ImageView imgComment,
      @NonNull ImageView imgLike, @NonNull TextView like, @NonNull LinearLayout llCommentEditText,
      @NonNull TextView museum, @NonNull TextView name, @NonNull RecyclerView recyclerView,
      @NonNull Button sendButton, @NonNull TextView size, @NonNull TextView technique) {
    this.rootView = rootView;
    this.addImage = addImage;
    this.author = author;
    this.category = category;
    this.collect = collect;
    this.comment = comment;
    this.commentEditText = commentEditText;
    this.detailToobar = detailToobar;
    this.era = era;
    this.horizontalScrollView = horizontalScrollView;
    this.imageContainer = imageContainer;
    this.imageUrl = imageUrl;
    this.imgCollect = imgCollect;
    this.imgComment = imgComment;
    this.imgLike = imgLike;
    this.like = like;
    this.llCommentEditText = llCommentEditText;
    this.museum = museum;
    this.name = name;
    this.recyclerView = recyclerView;
    this.sendButton = sendButton;
    this.size = size;
    this.technique = technique;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityAntiqueDetailBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityAntiqueDetailBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_antique_detail, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityAntiqueDetailBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.addImage;
      ImageView addImage = ViewBindings.findChildViewById(rootView, id);
      if (addImage == null) {
        break missingId;
      }

      id = R.id.author;
      TextView author = ViewBindings.findChildViewById(rootView, id);
      if (author == null) {
        break missingId;
      }

      id = R.id.category;
      TextView category = ViewBindings.findChildViewById(rootView, id);
      if (category == null) {
        break missingId;
      }

      id = R.id.collect;
      TextView collect = ViewBindings.findChildViewById(rootView, id);
      if (collect == null) {
        break missingId;
      }

      id = R.id.comment;
      TextView comment = ViewBindings.findChildViewById(rootView, id);
      if (comment == null) {
        break missingId;
      }

      id = R.id.commentEditText;
      EditText commentEditText = ViewBindings.findChildViewById(rootView, id);
      if (commentEditText == null) {
        break missingId;
      }

      id = R.id.detail_toobar;
      Toolbar detailToobar = ViewBindings.findChildViewById(rootView, id);
      if (detailToobar == null) {
        break missingId;
      }

      id = R.id.era;
      TextView era = ViewBindings.findChildViewById(rootView, id);
      if (era == null) {
        break missingId;
      }

      id = R.id.horizontalScrollView;
      HorizontalScrollView horizontalScrollView = ViewBindings.findChildViewById(rootView, id);
      if (horizontalScrollView == null) {
        break missingId;
      }

      id = R.id.imageContainer;
      LinearLayout imageContainer = ViewBindings.findChildViewById(rootView, id);
      if (imageContainer == null) {
        break missingId;
      }

      id = R.id.imageUrl;
      ImageView imageUrl = ViewBindings.findChildViewById(rootView, id);
      if (imageUrl == null) {
        break missingId;
      }

      id = R.id.img_collect;
      ImageView imgCollect = ViewBindings.findChildViewById(rootView, id);
      if (imgCollect == null) {
        break missingId;
      }

      id = R.id.img_comment;
      ImageView imgComment = ViewBindings.findChildViewById(rootView, id);
      if (imgComment == null) {
        break missingId;
      }

      id = R.id.img_like;
      ImageView imgLike = ViewBindings.findChildViewById(rootView, id);
      if (imgLike == null) {
        break missingId;
      }

      id = R.id.like;
      TextView like = ViewBindings.findChildViewById(rootView, id);
      if (like == null) {
        break missingId;
      }

      id = R.id.ll_commentEditText;
      LinearLayout llCommentEditText = ViewBindings.findChildViewById(rootView, id);
      if (llCommentEditText == null) {
        break missingId;
      }

      id = R.id.museum;
      TextView museum = ViewBindings.findChildViewById(rootView, id);
      if (museum == null) {
        break missingId;
      }

      id = R.id.name;
      TextView name = ViewBindings.findChildViewById(rootView, id);
      if (name == null) {
        break missingId;
      }

      id = R.id.recyclerView;
      RecyclerView recyclerView = ViewBindings.findChildViewById(rootView, id);
      if (recyclerView == null) {
        break missingId;
      }

      id = R.id.sendButton;
      Button sendButton = ViewBindings.findChildViewById(rootView, id);
      if (sendButton == null) {
        break missingId;
      }

      id = R.id.size;
      TextView size = ViewBindings.findChildViewById(rootView, id);
      if (size == null) {
        break missingId;
      }

      id = R.id.technique;
      TextView technique = ViewBindings.findChildViewById(rootView, id);
      if (technique == null) {
        break missingId;
      }

      return new ActivityAntiqueDetailBinding((ConstraintLayout) rootView, addImage, author,
          category, collect, comment, commentEditText, detailToobar, era, horizontalScrollView,
          imageContainer, imageUrl, imgCollect, imgComment, imgLike, like, llCommentEditText,
          museum, name, recyclerView, sendButton, size, technique);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
